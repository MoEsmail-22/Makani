@model Graduation_Project.ViewModels.AddPropertyViewModel

@{
    ViewData["Title"] = "Add Property";
    Layout = "~/Views/Shared/Addproperty.cshtml";
}

<form asp-action="NewListing" asp-controller="AddProperty" method="post" enctype="multipart/form-data">
    <div asp-validation-summary="All" class="text-danger"></div>

    <label for="title">Property Title</label>
    <input type="text" id="title" name="Title" value="@Model?.Title" required />

    <label for="price">Price</label>
    <input type="number" id="price" name="Price" value="@Model?.Price" min="0" required />

    <label for="property-location">Location</label>
    <select asp-for="Location" id="property-location" required>
        <option value="">location</option>
        <option value="alexandria">Alexandria</option>
        <option value="aswan">Aswan</option>
        <option value="asyut">Asyut</option>
        <option value="beheira">Beheira</option>
        <option value="beni-suef">Beni Suef</option>
        <option value="cairo">Cairo</option>
        <option value="dakahlia">Dakahlia</option>
        <option value="damietta">Damietta</option>
        <option value="faiyum">Faiyum</option>
        <option value="gharbia">Gharbia</option>
        <option value="giza">Giza</option>
        <option value="ismailia">Ismailia</option>
        <option value="kafr-el-sheikh">Kafr El Sheikh</option>
        <option value="luxor">Luxor</option>
        <option value="matruh">Matruh</option>
        <option value="minya">Minya</option>
        <option value="monufia">Monufia</option>
        <option value="new-valley">New Valley</option>
        <option value="north-sinai">North Sinai</option>
        <option value="port-said">Port Said</option>
        <option value="qalyubia">Qalyubia</option>
        <option value="qena">Qena</option>
        <option value="red-sea">Red Sea</option>
        <option value="sharqia">Sharqia</option>
        <option value="sohag">Sohag</option>
        <option value="south-sinai">South Sinai</option>
        <option value="suez">Suez</option>
    </select>

    <label for="rentOrSale">Rent or Sale</label>
    <select id="rentOrSale" name="Status" required>
        <option value="">Select</option>
        <option value="rent">Rent</option>
        <option value="sale">Sale</option>
    </select>

    <label for="type">Type</label>
    <select id="type" name="PropertyType" required>
        <option value="">Select Property Type</option>
        <option value="house">House</option>
        <option value="apartment">Apartment</option>
        <option value="villa">Villa</option>
        <option value="commercial">Commercial</option>
    </select>

    <label for="description">Description</label>
    <textarea id="description" name="Description" required>@Model?.Description</textarea>

    <label for="phone">Owner Phone</label>
    <input type="text" id="phone" name="Phone" value="@Model?.Phone" required />

    <label for="hiddenFileInput" class="upload-label">
        Upload Property Images (Click to Add Multiple)<br />
        <svg xmlns="http://www.w3.org/2000/svg" height="32" width="32" viewBox="0 0 512 512" fill="#fff">
            <path d="M448 80c8.8 0 16 7.2 16 16l0 319.8-5-6.5-136-176c-4.5-5.9-11.6-9.3-19-9.3s-14.4 3.4-19 9.3L202 340.7l-30.5-42.7C167 291.7 159.8 288 152 288s-15 3.7-19.5 10.1l-80 112L48 416.3l0-.3L48 96c0-8.8 7.2-16 16-16l384 0zM64 32C28.7 32 0 60.7 0 96L0 416c0 35.3 28.7 64 64 64l384 0c35.3 0 64-28.7 64-64l0-320c0-35.3-28.7-64-64-64L64 32zm80 192a48 48 0 1 0 0-96 48 48 0 1 0 0 96z" />
        </svg>
    </label>

    <!-- Hidden file input -->
    <input type="file"
           id="hiddenFileInput"
           name="NormalImages"
           style="display: none;"
           multiple
           accept="image/*"
           onchange="handleFileSelection(event)" />

    <!-- File list display -->
    <div id="fileList" style="margin: 10px 0; color: #666;"></div>

    <button type="submit">Next: Upload 360 Image</button>
</form>

@section Scripts {
    <script>
        let selectedFiles = [];
        const MAX_IMAGES = 10; // Optional: Limit to 10 images

        document.querySelector('.upload-label').addEventListener('click', function(e) {
            e.preventDefault(); // Prevent default label behavior
            document.getElementById('hiddenFileInput').click();
        });

        function handleFileSelection(event) {
            const newFiles = Array.from(event.target.files);

            // Add new files (prevent duplicates)
            newFiles.forEach(file => {
                if (!selectedFiles.some(f => f.name === file.name)) {
                    if (selectedFiles.length < MAX_IMAGES) {
                        selectedFiles.push(file);
                    }
                }
            });

            // Update UI
            updateFileListDisplay();

            // Update the FORM DATA
            const dataTransfer = new DataTransfer();
            selectedFiles.forEach(file => dataTransfer.items.add(file));

            // Update the hidden input
            const fileInput = document.getElementById('hiddenFileInput');
            fileInput.files = dataTransfer.files;
        }

        function updateFileListDisplay() {
            const fileListDiv = document.getElementById('fileList');
            fileListDiv.innerHTML = `<strong>Selected (${selectedFiles.length}/${MAX_IMAGES}):</strong><br>` +
                selectedFiles.map(file => file.name).join('<br>');
        }
    </script>
}